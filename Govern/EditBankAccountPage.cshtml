@{
    Layout = "_Admin.cshtml";
    Login AdminLogin = new Login();
    int reqLangID = 0;
    if (Request.QueryString["Lang"] != null)
    {
        reqLangID = Request.QueryString["Lang"].AsInt();
    }
    MvcXmlEntities ConnXml = new MvcXmlEntities();
    Setting Setting = ConnXml.Setting.FirstOrDefault();
    #region Değişkenler
    var txtTitle = "";
    var txtIban = "";
    var drpLang = reqLangID.ToString();
    var drpPageStatus = "";
    var drpBankID = 0;
    var drpUnit = "";
    var btnName = "Kaydet";
    var txtPageTitle = "Yeni Hesap Ekle";
    #endregion
    if (Request.QueryString["Delete"].IsInt())
    {
        int reqID = Request.QueryString["Delete"].AsInt();
        BankAccount Pages = ConnXml.BankAccount.FirstOrDefault(x => x.BankAccountID == reqID);
        ConnXml.Entry(Pages).State = System.Data.Entity.EntityState.Deleted;
        int ConnStatus = 0;
        ConnStatus = ConnXml.SaveChanges();
        if (ConnStatus > 0)
        {
            Session["Ok"] = "İşlem başarı ile gerçekleşmiştir.";
        }
        else
        {
            Session["Error"] = "Bir problem oldu yönetici ile görüşün.";
        }
        Response.Redirect("BankAccountPage?Lang=" + reqLangID);
    }
    if (Request.QueryString["ID"].IsInt() || Request.QueryString["Reference"].IsInt() || Request.QueryString["HistoryID"].IsInt())
    {
        int reqID = (Request.QueryString["ID"].AsInt() != 0 ? Request.QueryString["ID"].AsInt() : Request.QueryString["Reference"].AsInt());
        int historyID = (Request.QueryString["HistoryID"].AsInt());
        BankAccount reqPage = new BankAccount();
        if (reqID > 0)
        {
            reqPage = ConnXml.BankAccount.FirstOrDefault(x => x.BankAccountID == reqID);
        }
        else if (historyID > 0)
        {
            reqPage = ConnXml.BankAccountHistory.FirstOrDefault(x => x.BankAccountHistoryID == historyID).Cast<BankAccount>();
            btnName = "Geçmişe Dön";
            txtPageTitle = reqPage.Title + " adlı menü'nün " + reqPage.ModifiedDate + " tarihinde kaydedilen versiyonu. (Geçmişe dönmeden düzenleme yapamazsınız)";
        }
        txtTitle = reqPage.Title;
        txtIban = reqPage.Iban;
        drpPageStatus = reqPage.Status.ToString();
        drpLang = reqPage.Lang.ToString();
        drpBankID = reqPage.BankID;
        drpUnit = reqPage.Unit;
    }
    if (IsPost)
    {
        if (!AdminLogin.IsLogin())
        {
            Response.Redirect(Shared.PageBasePath() + "Govern/Login");
        }
        // AntiForgery.Validate();
        BankAccount itemPages = new BankAccount();
        BankAccountHistory backup = new BankAccountHistory();
        if (Request.QueryString["ID"].IsInt() || Request.QueryString["Reference"].IsInt() || Request.QueryString["HistoryID"].IsInt())
        {
            int reqID = (Request.QueryString["ID"].AsInt() != 0 ? Request.QueryString["ID"].AsInt() : Request.QueryString["Reference"].AsInt());
            int historyID = (Request.QueryString["HistoryID"].AsInt());
            if (reqID > 0)
            {
                itemPages = ConnXml.BankAccount.FirstOrDefault(x => x.BankAccountID == reqID);
                backup = itemPages.Cast<BankAccountHistory>();
            }
            else if (historyID > 0)
            {
                itemPages = ConnXml.BankAccountHistory.FirstOrDefault(x => x.BankAccountHistoryID == historyID).Cast<BankAccount>();
                backup = itemPages.Cast<BankAccountHistory>();
            }
            itemPages.ModifiedDate = DateTime.Now;
            itemPages.ModifiedId = AdminLogin.LoginUserID();
            backup.ModifiedId = AdminLogin.LoginUserID();
        }
        else
        {
            itemPages.Line = 0;
            itemPages.CreatedDate = DateTime.Now;
            itemPages.ModifiedDate = DateTime.Now;
            itemPages.CreatedId = AdminLogin.LoginUserID();
        }
        itemPages.Title = Request.Form["txtTitle"];
        itemPages.Iban = Request.Form["txtIban"];
        itemPages.BankID = Request.Form["drpBankID"].AsInt();
        itemPages.Unit = Request.Form["drpUnit"];
        itemPages.Lang = Request.Form["drpLang"].AsInt();
        itemPages.Status = Request.Form["drpPageStatus"] == "0" ? false : true;
        int ConnStatus = 0;
        if (Request.QueryString["ID"].IsInt() || Request.QueryString["HistoryID"].IsInt())
        {
            ConnXml.Entry(itemPages).State = System.Data.Entity.EntityState.Modified;
            ConnStatus = ConnXml.SaveChanges();
        }
        else
        {
            ConnXml.BankAccount.Add(itemPages);
            ConnStatus = ConnXml.SaveChanges();
            backup = itemPages.Cast<BankAccountHistory>();
        }
        if (ConnStatus > 0)
        {
            backup.HistoryCreateDate = DateTime.Now;
            Session["Ok"] = "İşlem başarı ile gerçekleşmiştir.";
            ConnXml.BankAccountHistory.Add(backup);
            ConnStatus = ConnXml.SaveChanges();
        }
        else
        {
            Session["Error"] = "Bir problem oldu yönetici ile görüşün.";
        }
        Response.Redirect("BankAccountPage?Lang=" + reqLangID);
    }
}
<div class="Title">@Html.Raw(txtPageTitle)</div>
<form method="post" enctype="multipart/form-data">
    @AntiForgery.GetHtml()
    @* If at least one validation error exists, notify the user *@
    @Html.ValidationSummary("Account creation was unsuccessful. Please correct the errors and try again.", excludeFieldErrors: true, htmlAttributes: null)
    <div id="EditPageContent">
        <div class="Content">
            <div class="Item">
                @{
                    List<SelectListItem> lstForm = new List<SelectListItem>();
                    lstForm.Add(new SelectListItem { Value = "0", Text = "Banka Seçiniz" });
                    lstForm.AddRange(ConnXml.Bank.Where(x => x.Lang == reqLangID).ToList().Select(x => new SelectListItem { Value = x.BankID.ToString(), Text = x.Title, Selected = (x.BankID == drpBankID ? true : false) }));
                    IEnumerable<SelectListItem> drpFormsItem = lstForm;
                    if (drpFormsItem.Any(x => x.Value == drpBankID.ToString()))
                    {
                        drpFormsItem.FirstOrDefault(x => x.Value == drpBankID.ToString()).Selected = true;
                    }
                }
                @HelperAdminControl.DropDownList("drpBankID", "Banka", drpFormsItem)
                @HelperAdminControl.inputText("txtTitle", "Hesap Alıcı Adı", false, true, txtTitle)
                @HelperAdminControl.inputText("txtIban", "IBAN ", false, true, txtIban)
                @{
                    lstForm = new List<SelectListItem>();
                    lstForm.Add(new SelectListItem { Value = "", Text = "Birim Seçiniz" });
                    lstForm.Add(new SelectListItem { Value = "TL", Text = "TL" });
                    lstForm.Add(new SelectListItem { Value = "USD", Text = "USD" });
                    lstForm.Add(new SelectListItem { Value = "EURO", Text = "EURO" });
                    IEnumerable<SelectListItem> drpUnitItem = lstForm;
                    if (drpUnitItem.Any(x => x.Value == drpUnit))
                    {
                        drpUnitItem.FirstOrDefault(x => x.Value == drpUnit).Selected = true;
                    }
                }
                @HelperAdminControl.DropDownList("drpUnit", "Para Birimi", drpUnitItem)
                @{
                    List<SelectListItem> lstLang = new List<SelectListItem>();
                    for (int i = 0; i < Shared.Lang.Length; i++)
                    {
                        lstLang.Add(new SelectListItem { Value = i.ToString(), Text = Shared.toLang(i) });
                    }
                    lstLang.FirstOrDefault(x => x.Value == drpLang).Selected = true;
                    IEnumerable<SelectListItem> drpLangItems = lstLang;
                }
                @HelperAdminControl.DropDownList("drpLang", "Dil", drpLangItems)
                <div class="Title">Durum</div>
                <div class="Input">
                    <input type="radio" id="drpPageStatus0" name="drpPageStatus" value="0"><label for="drpPageStatus0">Pasif</label>
                    <input type="radio" id="drpPageStatus1" name="drpPageStatus" value="1" checked="checked"><label for="drpPageStatus1">Aktif</label>
                </div>
                <div class="ButtonPanel">
                    <input id="btnSave" name="btnSave" type="submit" class="inputbutton Add" value="@Html.Raw(btnName)" />
                </div>
            </div>
        </div>
    </div>
</form>