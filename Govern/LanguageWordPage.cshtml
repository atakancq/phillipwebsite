@{
    Layout = "_Admin.cshtml";
    MvcXmlEntities ConnXml = new MvcXmlEntities();
    Login AdminLogin = new Login();
    int reqLangID = 0;
    var btnName = "Kaydet";
    var txtPageTitle = "Dil Ayarları";
    if (Request.QueryString["Lang"] != null)
    {
        reqLangID = Request.QueryString["Lang"].AsInt();
    }
    if (IsPost)
    {
        if (!AdminLogin.IsLogin())
        {
            Response.Redirect(Shared.PageBasePath() + "Govern/Login");
        }
        if (!Request.Form["btnSave"].IsEmpty())
        {
            LanguageWordValue itemPages = new LanguageWordValue();
            LanguageWordValueHistory backup = new LanguageWordValueHistory();
            string[] values = Request.Form.AllKeys;
            reqLangID = Request.Form["drpLang"].AsInt();
            int ConnStatus = 0;
            foreach (string value in values.ToList().Where(x=> x!="drpLang" && x!="btnSave"))
            {
                int LanguageWordID = value.Replace("txtLanguageWord", "").AsInt();
                if (ConnXml.LanguageWordValue.Any(x => x.Lang == reqLangID && x.LanguageWordID == LanguageWordID))
                {
                    itemPages = ConnXml.LanguageWordValue.FirstOrDefault(x => (x.Lang == reqLangID && x.LanguageWordID == LanguageWordID));
                    itemPages.ModifiedId = AdminLogin.LoginUserID();
                    backup = itemPages.Cast<LanguageWordValueHistory>();
                    itemPages.Value = Request.Unvalidated().Form[value];
                    itemPages.ModifiedDate = DateTime.Now;
                    ConnXml.Entry(itemPages).State = System.Data.EntityState.Modified;
                    ConnStatus = ConnXml.SaveChanges();
                    if (backup.Value != itemPages.Value)
                    {
                        backup.HistoryCreateDate = DateTime.Now;
                        ConnXml.LanguageWordValueHistory.Add(backup);
                        ConnXml.SaveChanges();
                    }
                }
                else
                {
                    itemPages.ModifiedId = AdminLogin.LoginUserID();
                    itemPages.Lang = reqLangID;
                    itemPages.LanguageWordID = LanguageWordID;
                    itemPages.Value = Request.Unvalidated().Form[value];
                    itemPages.ModifiedDate = DateTime.Now;
                    itemPages.CreatedDate = DateTime.Now;
                    ConnXml.Entry(itemPages).State = System.Data.EntityState.Added;
                    ConnStatus = ConnXml.SaveChanges();
                }
            }
            if (ConnStatus > 0)
            {
                Session["Ok"] = "İşlem başarı ile gerçekleşmiştir.";
            }
            else
            {
                Session["Error"] = "Bir problem oldu yönetici ile görüşün.";
            }
            Response.Redirect("LanguageWordPage?Lang=" + reqLangID);
        }
        else if (!Request.Form["drpLang"].IsEmpty())
        {
            reqLangID = Request.Form["drpLang"].AsInt();
        }
    }
}
@functions
{
    public string GetDetail(int getLangID)
    {
        MvcXmlEntities ConnXml = new MvcXmlEntities();
        Setting Setting = new MvcXmlEntities().Setting.FirstOrDefault();
        string str = "";
        foreach (LanguageWord itemPages in ConnXml.LanguageWord.ToList())
        {
            string getLangValue = "";
            try
            {
                LanguageWordValue lwValue = ConnXml.LanguageWordValue.FirstOrDefault(x => x.Lang == getLangID && x.LanguageWordID == itemPages.LanguageWordID);
                getLangValue = lwValue.Value;
            }
            catch { }
            str += "<tr>";
            str += "<td class='Min'>" + itemPages.LanguageWordID + "</td>";
            str += "<td class='Normal'><xmp>" + itemPages.Word + "</xmp></td>";
            str += "<td class='Big'><input autocomplete='off' name=\"txtLanguageWord" + itemPages.LanguageWordID + "\" id=\"txtLanguageWord\" type=\"text\"  style=\"width:99%\" value=\"" + getLangValue + "\" "+(getLangID == 2 ? "dir='rtl'":"")+" /></td>";
            str += "</tr>";
        }
        return str;
    }
}
<div class="Title">@Html.Raw(txtPageTitle)</div>
<div class="Content">
    <form method="post" enctype="multipart/form-data">
        <div class="ButtonPanel">
            @{
                List<SelectListItem> lstLang = new List<SelectListItem>();
                for (int i = 0; i < Shared.Lang.Length; i++)
                {
                    lstLang.Add(new SelectListItem { Value = i.ToString(), Text = Shared.toLang(i) });
                }
                lstLang.FirstOrDefault(x => x.Value == reqLangID.ToString()).Selected = true;
                IEnumerable<SelectListItem> drplstLangs = lstLang;
            }
            @Html.ListBox("drpLang", drplstLangs, new { @class = "inputdrp", @onchange = "submit();" })
        </div>
        <table class="GridWiew" cellpadding="5" cellspacing="0">
            <thead>
                <td class="Min">ID</td>
                <td class="Normal">Kelime</td>
                <td class="Big">Değer</td>
            </thead>
            <tbody>
                @{
                    string str = GetDetail(reqLangID);
                    if (!str.IsEmpty())
                    {
                        @Html.Raw(str);
                    }
                    else
                    {
                        <tr>
                            <td class='Big' colspan='15'>
                                <div class='NoneItemPage'>
                                    Kelime Bulunamadı
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
            <tfoot>
                <td class="Min">ID</td>
                <td class="Normal">Kelime</td>
                <td class="Big">Değer</td>
            </tfoot>
        </table>
        <div class="ButtonPanel">
            <input id="btnSave" name="btnSave" type="submit" class="inputbutton Add" value="@Html.Raw(btnName)" />
        </div>
    </form>
</div>