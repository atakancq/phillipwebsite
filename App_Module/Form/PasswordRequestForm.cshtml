@{
    int getLang = Shared.GetLang();
    using (MvcXmlEntities ConnXml = new MvcXmlEntities())
    {
        int getFormID = 4;
        Setting Setting = ConnXml.Setting.FirstOrDefault();
        if (IsPost)
        {
            var txtEmail = Request.Form["txtEmail"];
            var txtAccountNumber = Request.Form["txtAccountNumber"];
            var chckKvkk = Request.Form["chckKvkk"];
            var chckElectronic = Request.Form["chckElectronic"];
            PasswordRequestForm passwordRequestForm = new PasswordRequestForm()
            {
                AccountNumber = txtAccountNumber,
                Email = txtEmail,
                IpAddress = Shared.GetIpAddress(),
                AcceptElectronicMessage = chckElectronic == "ok" ? true : false,
                KVKK = chckKvkk == "ok" ? true : false,
                LangID = Shared.GetLang(),
                AddDate = DateTime.Now
            };
            ConnXml.PasswordRequestForm.Add(passwordRequestForm);
            int ConnStatus = ConnXml.SaveChanges();
            if (ConnStatus > 0)
            {
                #region MailNames
                string[] MailNames = {
                    "Eposta",
                    "Hesap Numarası",
                    "KVKK",
                    "Elektronik İleti Gönderimini ",
                    "Gönderim Tarihi"
                };
                #endregion
                #region MailValues
                string[] MailValues = {
                    txtEmail,
                    txtAccountNumber,
                    chckKvkk,
                    chckElectronic,
                    DateTime.Now.ToString()
                };
                #endregion
                if (ConnXml.FormMailRelation.Any(x => x.FormID == getFormID))
                {
                    FormMailRelation FormMailRelation = ConnXml.FormMailRelation.FirstOrDefault(x => x.FormID == getFormID);
                    foreach (MailAccount itemAccount in ConnXml.MailAccount.Where(x => x.MailGroupID == FormMailRelation.MailGroupID))
                    {
                        WebMail.Send(to: itemAccount.Address, subject: "Şifre Talep", isBodyHtml: true, body: Setting.Pagetitle + " web sitesinden şifre talep formu gönderildi.<br /><br />" + Shared.ToFormBody(MailNames, MailValues));
                    }
                }
            }
            @Html.Raw(Shared.GetTranslation(15))
        }
        else
        {
            <div class="iletisim-ve-ofislerimiz-bizeulasin">
                <div class="bize-ulasin-inner">
                    <p>
                        @Shared.GetTranslation(10)
                    </p>
                    <form method="post">
                        @HelperClientControl.inputText("txtEmail", Shared.GetTranslation(8), false, true, "Email", "input-giris")
                        @HelperClientControl.inputText("txtAccountNumber", Shared.GetTranslation(9), false, true, "", "input-giris")
                        @HelperClientControl.CheckBox("chckKvkk", "<strong>KVKK </strong>Şartlarını Kabul Ediyorum.", true, GetSeoUrl.getPagesUrl(49))
                        @HelperClientControl.CheckBox("chckElectronic", "Elektronik İleti Gönderimini Kabul Ediyorum.", true, GetSeoUrl.getPagesUrl(50))
                        <div class="form-sifre-talep-alt">
                            @*burası captcha*@
                            <div class="google-recaptcha">
                                <input type="submit" id="submit" value="Gönder" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        }
    }
}